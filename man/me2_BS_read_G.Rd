% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/me2_BS_read_G.R
\name{me2_BS_read_G}
\alias{me2_BS_read_G}
\title{Get the G values from the BS results file (.txt)}
\usage{
me2_BS_read_G(
  me2_bs_txt_file,
  corr_threshold = 0.6,
  tidy_output = FALSE,
  block_boundaries = list(start = "^\\\\s*Factor matrix AA*", end =
    "^\\\\s*Factor matrix BB", start_Gmap = "^\\\\s*Correlations of G factors:*",
    end_Gmap = "^\\\\s*Regression matrix T1 of fitted G vs. reference G:*"),
  dates = NA,
  factor_mass = NA,
  rescale_unity = FALSE,
  tz = "Etc/GMT-1"
)
}
\arguments{
\item{me2_bs_txt_file}{output file (.txt), containing the results and
auxiliary information for the BS runs.}

\item{corr_threshold}{This parameter is used to filter out the factors that
have a correlation less to the provided threshold (default = 0.6).
This way only the BS results for factors with a correlation larger or 
equal to the threshold are retained for the aggregated results. The
threshold is also used in the mapping. When the maximum correlation for the
BS factors is below the threshold, the factor is considered to be 
"unmapped".}

\item{tidy_output}{Should the output be reshaped into tidy data? Default:
FALSE}

\item{block_boundaries}{A list containing the \dQuote{start} and \dQuote{end}
string used to identify the boundaries of the block containing the values
for the G-matrix. The \dQuote{start_Gmap} and \dQuote{end_Gmap} are used to
identify the boundaries of the block with the G correlations which
are use to produce a mapping table (i.e., which factor has the highest
correlation) that can be used to check swaps between factors.}

\item{dates}{A vector containing the sample dates for the rows in the
G-matrix. If these dates are outputted in the ME-2 output as the
second column (a column of row numbers being the first), then these values
are used when \code{dates = NA}. The values inside the ME-2 output are
overwritten when a vector of \code{dates} are provided.If this second
column with dates is not available new daily dates, starting from
1970-01-01 will be automatically provided.}

\item{factor_mass}{This is a vector with the same length as the number of
factor profiles. It contains the total mass in concentration units which is
used to transform the G matrix from unity to concentration units.}

\item{rescale_unity}{In some cases the averages of the G factors are not
equal to unity. By default a warning is given whenever this is the case.
With this parameter set to \code{TRUE} each factor is multiplied by
1/avg(factor), so that the G factors are scaled to unity again.}

\item{tz}{Parameter to control the timezone when parameter \dQuote{dates} is
not used. Default: 'Etc/GMT-1'#'}
}
\value{
\code{me2_BS_read_G} returns an object of class ``me2tools''.
  The object includes three main components: \code{call}, the command used
  to read the data; \code{data}, the G data for each BS run; \code{G_format},
  the tidied G data for each BS run where the correlation between the BASE 
  and BS factor is larger than the \dQuote{corr_threshold} and the 
  \code{G_mapping}, the mapping data based on G correlations of each BS run. 
  
  The output of the G-values for the BS results is nearly identical to the 
  output of the G-values from the base runs. The only difference is that the
  BS results have different values in the \dQuote{run_type} column. In this 
  case this column contains information of the type of bootstrap.
  
  The mapping data is constructed with the BASE factors in the columns and
  the row factors being the BS factors. Hence, by reading the rows one can
  observe swaps from BS factors into different BASE factors. Ideally, a
  BS factor should only be mapped to the same BASE factor. When the maximum 
  correlation for the BS factors is below the \dQuote{corr_threshold}, the 
  factor is considered to be "unmapped".
  
  If retained, e.g., using \code{output <- me2_BSDISP_read_res(file)}, this 
  output can be used to recover the data, reproduce, or undertake further 
  analysis.

  An me2tools output can be manipulated using a number of generic operations,
  including \code{print}, \code{plot} and \code{summary}.
}
\description{
Files stored after a BS run are named with a user-specific prefix, shown 
here as an asterisk (*). Three output files (*_BS.dat,  *_BS.txt and 
*_BS.rsd) are stored after a BS run, and in this function the data provided 
in the \dQuote{.txt} file are read. The function \code{me2_BS_read_F}  
reads all the factor profiles in the text file and 
\code{me2_BS_read_G} (this function) reads all the factor contributions. 
Based on the provided \code{corr_threshold} in the \code{me2_BS_read_F} and
\code{me2_BS_read_G} functions only factors mapped to base factors with a 
correlation larger than \code{corr_threshold} are retained when aggregating 
the BS results (i.e., \dQuote{BS_P05}, \dQuote{BS_P95} and 
\dQuote{BS_median}). The residuals, stored in the *_BS.rsd file, can be 
read using \code{me2_read_residuals}.
}
\section{Defining the block with data}{


The \dQuote{.txt} file contains a lot of empty lines, which are stripped
immediately after reading the file. This is important, as this ensures that
each block of data is contained withing two identifying strings.

The function uses these lines to determine the start and end line in which
the data lies. As such, the lines between start and end are read and parsed.

The identifying strings are provided using the \code{block_boundaries}, which
is a list containing the \dQuote{start} and \dQuote{end} string. The string
can be preceded by \code{^\\s*} which tells the function that the string can
begin with an undefined number of spaces.
}

\section{Adding dates to G}{

By far the easiest way to add \dQuote{dates} to G is to provide them as
input parameters. The dates can probably be found in the original data
input used for ME-2 calculations. For multi time ME-2 application these dates
correspond with the lowest time resolution.
}

\section{Renaming factor profiles}{

As the labels of the factor profiles are unknown, this routine reads them as
\dQuote{factor_xx}, with xx being a unique number and outputted as a
character array. The easiest way to work with this data is by re-coding this
vector as \code{factor}. Then the order of the factor profiles and the
correct names can be easily set using the following code.

\preformatted{
mydata$factor <- factor(mydata$factor)
mydata$factor <- dplyr::recode_factor(mydata$factor,
                                      `factor_01` = "MyFirstName",
                                      `factor_02` = "MySecondName",
                                      ...
)
}

Please note that the above will only work when the data is read with the
\code{tidy_output = TRUE} setting.
}

\seealso{
\code{\link{me2_read_G}}, \code{\link{me2_DISP_read_G}}, 
\code{\link{me2_read_all}}, \code{\link{me2_read_dat}}
}
